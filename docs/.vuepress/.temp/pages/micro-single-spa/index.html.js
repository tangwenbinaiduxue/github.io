import comp from "D:/github.io/docs/.vuepress/.temp/pages/micro-single-spa/index.html.vue"
const data = JSON.parse("{\"path\":\"/micro-single-spa/\",\"title\":\"微服务、微前端\",\"lang\":\"en-US\",\"frontmatter\":{\"date\":\"2023-6-26\",\"category\":[\"前端微服务化\"]},\"headers\":[{\"level\":2,\"title\":\"single-spa\",\"slug\":\"single-spa\",\"link\":\"#single-spa\",\"children\":[]},{\"level\":2,\"title\":\"iframe\",\"slug\":\"iframe\",\"link\":\"#iframe\",\"children\":[]},{\"level\":2,\"title\":\"qiankun\",\"slug\":\"qiankun\",\"link\":\"#qiankun\",\"children\":[]}],\"git\":{\"updatedTime\":null,\"contributors\":[]},\"filePathRelative\":\"micro-single-spa/index.md\",\"excerpt\":\"\\n<p>1.技术栈的无关性：主应用不关心子应用的技术栈，子应用有完全的技术栈自主性</p>\\n<p>2.独立开发，独立部署：子框架维护了自动更新功能</p>\\n<p>3.增量升级更新的操作：增量优雅升级，存量的业务保持不变 对于新增的业务是渐进式\\n的扩展\\n4.运行环境：独立</p>\\n<p>5.环境隔离：css隔离js隔离</p>\\n<p>6.消息通知：统一的通知方式</p>\\n<p>7.依赖复用：common dependency 不会重复引用</p>\\n<h2>single-spa</h2>\\n<p>当前为前端的基础框架</p>\\n<p>生命周期 url发生变化</p>\\n<p>如何去做样式隔离？ postcss 、shadow-dom\\n如何实现js隔离？systemjs import、主应用入口处直接引用js ，基于iframe进行隔离</p>\"}")
export { comp, data }
