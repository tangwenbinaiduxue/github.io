"use strict";(self.webpackChunkmy_vuepress_site=self.webpackChunkmy_vuepress_site||[]).push([[878],{6929:(e,i,a)=>{a.r(i),a.d(i,{comp:()=>r,data:()=>p});var l=a(641);const n=[(0,l.Fv)('<h1 id="vue3-diff" tabindex="-1"><a class="header-anchor" href="#vue3-diff"><span>Vue3 diff</span></a></h1><p>非全量Diff DOM 静态tag 有静态标记的tag的节点</p><p>不是双端比较了，是最长递增子序列</p><p>头和头比较，向后移动比较；尾和尾比较，向前比较；找到剩余部分的最长递增子序列，剩余节点插进最长递增子序列中</p><ol><li>最长递增子序列 leetcode</li><li>vue2 vue3 diff写出来 看代码</li><li>根绝vue3 简化源码 proxy reactive ast</li></ol><h2 id="vue3源码" tabindex="-1"><a class="header-anchor" href="#vue3源码"><span>vue3源码</span></a></h2><h3 id="编译时的核心" tabindex="-1"><a class="header-anchor" href="#编译时的核心"><span>编译时的核心</span></a></h3><p>compiler-core 编译原理实现的过程: 词法分析，语法分析，代码转换，代码生成 visitor关联，和babel一样</p>',8)],t={},r=(0,a(6262).A)(t,[["render",function(e,i){return(0,l.uX)(),(0,l.CE)("div",null,n)}]]),p=JSON.parse('{"path":"/vue3/","title":"Vue3 diff","lang":"en-US","frontmatter":{"category":"vue3源码学习记录"},"headers":[{"level":2,"title":"vue3源码","slug":"vue3源码","link":"#vue3源码","children":[{"level":3,"title":"编译时的核心","slug":"编译时的核心","link":"#编译时的核心","children":[]}]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"vue3/index.md","excerpt":"\\n<p>非全量Diff DOM 静态tag 有静态标记的tag的节点</p>\\n<p>不是双端比较了，是最长递增子序列</p>\\n<p>头和头比较，向后移动比较；尾和尾比较，向前比较；找到剩余部分的最长递增子序列，剩余节点插进最长递增子序列中</p>\\n<ol>\\n<li>最长递增子序列 leetcode</li>\\n<li>vue2 vue3 diff写出来 看代码</li>\\n<li>根绝vue3 简化源码 proxy reactive ast</li>\\n</ol>\\n<h2>vue3源码</h2>\\n<h3>编译时的核心</h3>\\n<p>compiler-core 编译原理实现的过程: 词法分析，语法分析，代码转换，代码生成   visitor关联，和babel一样</p>"}')}}]);